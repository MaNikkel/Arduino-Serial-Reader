/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import arduino.*;
import com.fazecast.jSerialComm.SerialPort;
import javax.swing.JFileChooser;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import model.bean.ReadingData;
import exportfactory.*;

/**
 *
 * @author Mathias
 */

public class TelaArduino extends javax.swing.JFrame {

    /**
     * Creates new form TelaArduino
     */
    
    public static Arduino arduino;
    public int colNum;
    public static ReadingData rd = new ReadingData();
    
    public TelaArduino() {
        initComponents();
        loadPorts();
        lblReading.setVisible(false);
        //Funções ainda não implementadas
        jmiAddColumn.setEnabled(false);
        jmiDeleteColumn.setEnabled(false);
    }
    
    
    
    public  Runnable t1 = new Runnable(){
        public void run(){
            while(true){
                //System.out.println(kafer.serialRead(2));
                
                String leitura = arduino.serialRead();
              
                char[] leitura2 = leitura.toCharArray();
                //int cont = 0;
                int k = 0;
                for(int i = 0; i < leitura.length(); i++){
                    if (leitura2[i] == '\n'){
                       rd.setData_(leitura.subSequence(k, i).toString());
                       k = i+1;
                       readJTable();
                    } 
                }
                
            }
//            
        }
    };    
//                for(int i = 0; i < leitura.length(); i++){
//                    if(leitura2[i] == '\n'){
//                        for (int j = 0; j < colNum; j++) {
//                            if (cont == j) {
//                                //rd.setData(leitura.subSequence(k, i).toString(), j);
//                                System.out.println(leitura.subSequence(k, i).toString());
//                            }
//                            
//                            cont++;
//                            
//                            if(cont == jtValues.getColumnCount()){
//                                //readJTable();
//                            }
//                            
//                            k = i + 1;
//                        }
// //                        
//                    }
//                }
//                
            
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jPopupMenu2 = new javax.swing.JPopupMenu();
        jPanel1 = new javax.swing.JPanel();
        cbPort = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        btConnect = new javax.swing.JButton();
        lblReading = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtValues = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jmExport = new javax.swing.JMenu();
        jmiCSV = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jmiAddColumn = new javax.swing.JMenuItem();
        jmiDeleteColumn = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        cbPort.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                cbPortMouseEntered(evt);
            }
        });
        cbPort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbPortActionPerformed(evt);
            }
        });

        jLabel1.setText("Porta");

        btConnect.setText("Conectar");
        btConnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btConnectActionPerformed(evt);
            }
        });

        lblReading.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblReading.setText("Lendo dados...");
        lblReading.setAlignmentX(0.5F);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbPort, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btConnect)
                .addGap(24, 24, 24))
            .addComponent(lblReading, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btConnect)
                    .addComponent(cbPort, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblReading)
                .addGap(109, 109, 109))
        );

        jtValues.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Leituras"
            }
        ));
        jScrollPane2.setViewportView(jtValues);

        jMenu1.setText("File");

        jmExport.setText("Exportar");

        jmiCSV.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        jmiCSV.setText("CSV");
        jmiCSV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiCSVActionPerformed(evt);
            }
        });
        jmExport.add(jmiCSV);

        jMenu1.add(jmExport);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");

        jmiAddColumn.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));
        jmiAddColumn.setText("Adicionar Coluna");
        jmiAddColumn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiAddColumnActionPerformed(evt);
            }
        });
        jMenu2.add(jmiAddColumn);

        jmiDeleteColumn.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.CTRL_MASK));
        jmiDeleteColumn.setText("Deletar Coluna");
        jmiDeleteColumn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiDeleteColumnActionPerformed(evt);
            }
        });
        jMenu2.add(jmiDeleteColumn);

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setText("Limpar Saída");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem1);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 481, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void loadPorts(){
         SerialPort[] portNames = SerialPort.getCommPorts();
         cbPort.removeAllItems();
         for(SerialPort portName:portNames){
            cbPort.addItem(portName.getSystemPortName());
         }      
     }
    
    public void readJTable(){
        DefaultTableModel tableModel = (DefaultTableModel) jtValues.getModel();
        tableModel.addRow(new Object[]{
                rd.getData_()
        });     
    }
    
    private void cbPortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbPortActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbPortActionPerformed

    private void btConnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btConnectActionPerformed
        // TODO add your handling code here:
        if(btConnect.getText().equals("Conectar")){//usuário clicou em conectar
            if(cbPort.getSelectedItem().toString().isEmpty()){
                System.err.println("Erro!!"); 
            }else{
                arduino = new Arduino(cbPort.getSelectedItem().toString(), 9600);
                if(arduino.openConnection()){//conexão aberta com sucesso
                    lblReading.setVisible(true);
                    btConnect.setText("Desconectar");
                    cbPort.setEnabled(false);
                    new Thread(t1).start();
                }    
            }
        }else{//usuário clicou em desconectar
            arduino.closeConnection();
            lblReading.setVisible(false);
            btConnect.setText("Conectar");
            cbPort.setEnabled(true);
            loadPorts();
        }
    }//GEN-LAST:event_btConnectActionPerformed

    private void cbPortMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cbPortMouseEntered
        loadPorts();
    }//GEN-LAST:event_cbPortMouseEntered

    private void jmiAddColumnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiAddColumnActionPerformed
//        DefaultTableModel tableModel = (DefaultTableModel) jtValues.getModel();
//        tableModel.addColumn("new");
    }//GEN-LAST:event_jmiAddColumnActionPerformed

    private void jmiDeleteColumnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiDeleteColumnActionPerformed
        DefaultTableModel tableModel = (DefaultTableModel) jtValues.getModel();
        //ainda não implementado
    }//GEN-LAST:event_jmiDeleteColumnActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        DefaultTableModel tableModel = (DefaultTableModel) jtValues.getModel();
        for(int i = jtValues.getRowCount()-1; i >= 0; i--)
            tableModel.removeRow(i);
        
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jmiCSVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiCSVActionPerformed
        // TODO add your handling code here:
        ExportOptions eo = new ExportOptions(); 
        eo.toExcel(jtValues);
    }//GEN-LAST:event_jmiCSVActionPerformed

    /**
     * 
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaArduino.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaArduino.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaArduino.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaArduino.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaArduino().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btConnect;
    private javax.swing.JComboBox<String> cbPort;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JPopupMenu jPopupMenu2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JMenu jmExport;
    private javax.swing.JMenuItem jmiAddColumn;
    private javax.swing.JMenuItem jmiCSV;
    private javax.swing.JMenuItem jmiDeleteColumn;
    private javax.swing.JTable jtValues;
    private javax.swing.JLabel lblReading;
    // End of variables declaration//GEN-END:variables
}
